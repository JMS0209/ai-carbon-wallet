/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PaymentProcessor,
  PaymentProcessorInterface,
} from "../../contracts/PaymentProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "paymentId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "carbonCredits",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "jobId",
        type: "string",
      },
    ],
    name: "OffsetPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "paymentId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "carbonCredits",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "jobId",
        type: "string",
      },
    ],
    name: "OffsetRetired",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "carbonCredits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "jobId",
        type: "string",
      },
      {
        internalType: "bool",
        name: "retired",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "carbonCredits",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "jobId",
        type: "string",
      },
    ],
    name: "purchaseOffset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200132138038062001321833981810160405281019062000037919062000232565b336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ac919062000275565b60405180910390fd5b620000c6816200010260201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000292565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fa82620001cd565b9050919050565b6200020c81620001ed565b81146200021857600080fd5b50565b6000815190506200022c8162000201565b92915050565b6000602082840312156200024b576200024a620001c8565b5b60006200025b848285016200021b565b91505092915050565b6200026f81620001ed565b82525050565b60006020820190506200028c600083018462000264565b92915050565b608051611073620002ae600039600061042201526110736000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630716326d146100675780633518f9741461009c5780633e413bee146100b8578063715018a6146100d65780638da5cb5b146100e0578063f2fde38b146100fe575b600080fd5b610081600480360381019061007c91906106f7565b61011a565b60405161009396959493929190610829565b60405180910390f35b6100b660048036038101906100b191906109f2565b61020b565b005b6100c0610420565b6040516100cd9190610ac0565b60405180910390f35b6100de610444565b005b6100e8610458565b6040516100f59190610adb565b60405180910390f35b61011860048036038101906101139190610b22565b610482565b005b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201549080600301549080600401805461017590610b7e565b80601f01602080910402602001604051908101604052809291908181526020018280546101a190610b7e565b80156101ee5780601f106101c3576101008083540402835291602001916101ee565b820191906000526020600020905b8154815290600101906020018083116101d157829003601f168201915b5050505050908060050160009054906101000a900460ff16905086565b610213610508565b60008311610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d90610bfb565b60405180910390fd5b60008211610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610c8d565b60405180910390fd5b60003382426040516020016102b093929190610d52565b6040516020818303038152906040528051906020012090506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001428152602001838152602001600015158152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155608082015181600401908161039b9190610f2d565b5060a08201518160050160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817faf05d9a26ee85386c105a190ba2b55962da365132622bfdaed830a8d7fc5759f86868660405161040a93929190610fff565b60405180910390a35061041b61054e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61044c610558565b61045660006105df565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61048a610558565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104fc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104f39190610adb565b60405180910390fd5b610505816105df565b50565b600260005403610544576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b6105606106a5565b73ffffffffffffffffffffffffffffffffffffffff1661057e610458565b73ffffffffffffffffffffffffffffffffffffffff16146105dd576105a16106a5565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105d49190610adb565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6106d4816106c1565b81146106df57600080fd5b50565b6000813590506106f1816106cb565b92915050565b60006020828403121561070d5761070c6106b7565b5b600061071b848285016106e2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074f82610724565b9050919050565b61075f81610744565b82525050565b6000819050919050565b61077881610765565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107b857808201518184015260208101905061079d565b60008484015250505050565b6000601f19601f8301169050919050565b60006107e08261077e565b6107ea8185610789565b93506107fa81856020860161079a565b610803816107c4565b840191505092915050565b60008115159050919050565b6108238161080e565b82525050565b600060c08201905061083e6000830189610756565b61084b602083018861076f565b610858604083018761076f565b610865606083018661076f565b818103608083015261087781856107d5565b905061088660a083018461081a565b979650505050505050565b61089a81610765565b81146108a557600080fd5b50565b6000813590506108b781610891565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108ff826107c4565b810181811067ffffffffffffffff8211171561091e5761091d6108c7565b5b80604052505050565b60006109316106ad565b905061093d82826108f6565b919050565b600067ffffffffffffffff82111561095d5761095c6108c7565b5b610966826107c4565b9050602081019050919050565b82818337600083830152505050565b600061099561099084610942565b610927565b9050828152602081018484840111156109b1576109b06108c2565b5b6109bc848285610973565b509392505050565b600082601f8301126109d9576109d86108bd565b5b81356109e9848260208601610982565b91505092915050565b600080600060608486031215610a0b57610a0a6106b7565b5b6000610a19868287016108a8565b9350506020610a2a868287016108a8565b925050604084013567ffffffffffffffff811115610a4b57610a4a6106bc565b5b610a57868287016109c4565b9150509250925092565b6000819050919050565b6000610a86610a81610a7c84610724565b610a61565b610724565b9050919050565b6000610a9882610a6b565b9050919050565b6000610aaa82610a8d565b9050919050565b610aba81610a9f565b82525050565b6000602082019050610ad56000830184610ab1565b92915050565b6000602082019050610af06000830184610756565b92915050565b610aff81610744565b8114610b0a57600080fd5b50565b600081359050610b1c81610af6565b92915050565b600060208284031215610b3857610b376106b7565b5b6000610b4684828501610b0d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b9657607f821691505b602082108103610ba957610ba8610b4f565b5b50919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610be5601d83610789565b9150610bf082610baf565b602082019050919050565b60006020820190508181036000830152610c1481610bd8565b9050919050565b7f436172626f6e2063726564697473206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000610c77602583610789565b9150610c8282610c1b565b604082019050919050565b60006020820190508181036000830152610ca681610c6a565b9050919050565b60008160601b9050919050565b6000610cc582610cad565b9050919050565b6000610cd782610cba565b9050919050565b610cef610cea82610744565b610ccc565b82525050565b600081905092915050565b6000610d0b8261077e565b610d158185610cf5565b9350610d2581856020860161079a565b80840191505092915050565b6000819050919050565b610d4c610d4782610765565b610d31565b82525050565b6000610d5e8286610cde565b601482019150610d6e8285610d00565b9150610d7a8284610d3b565b602082019150819050949350505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ded7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610db0565b610df78683610db0565b95508019841693508086168417925050509392505050565b6000610e2a610e25610e2084610765565b610a61565b610765565b9050919050565b6000819050919050565b610e4483610e0f565b610e58610e5082610e31565b848454610dbd565b825550505050565b600090565b610e6d610e60565b610e78818484610e3b565b505050565b5b81811015610e9c57610e91600082610e65565b600181019050610e7e565b5050565b601f821115610ee157610eb281610d8b565b610ebb84610da0565b81016020851015610eca578190505b610ede610ed685610da0565b830182610e7d565b50505b505050565b600082821c905092915050565b6000610f0460001984600802610ee6565b1980831691505092915050565b6000610f1d8383610ef3565b9150826002028217905092915050565b610f368261077e565b67ffffffffffffffff811115610f4f57610f4e6108c7565b5b610f598254610b7e565b610f64828285610ea0565b600060209050601f831160018114610f975760008415610f85578287015190505b610f8f8582610f11565b865550610ff7565b601f198416610fa586610d8b565b60005b82811015610fcd57848901518255600182019150602085019450602081019050610fa8565b86831015610fea5784890151610fe6601f891682610ef3565b8355505b6001600288020188555050505b505050505050565b6000606082019050611014600083018661076f565b611021602083018561076f565b818103604083015261103381846107d5565b905094935050505056fea2646970667358221220f6e1a86f7bbd49dcc710db3ca226be5d2585713926a06cdb532780561887bfb564736f6c63430008140033";

type PaymentProcessorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentProcessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentProcessor__factory extends ContractFactory {
  constructor(...args: PaymentProcessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdc: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdc, overrides || {});
  }
  override deploy(
    _usdc: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdc, overrides || {}) as Promise<
      PaymentProcessor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PaymentProcessor__factory {
    return super.connect(runner) as PaymentProcessor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentProcessorInterface {
    return new Interface(_abi) as PaymentProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PaymentProcessor {
    return new Contract(address, _abi, runner) as unknown as PaymentProcessor;
  }
}
