# AI-Carbon Wallet Subgraph Schema
# TODO: Add comprehensive GraphQL mappings for all blockchain events
# TODO: Implement real-time WebSocket subscriptions for live data
# TODO: Add efficient querying patterns for frontend applications

type EnergyIssued @entity {
  id: ID!
  jobId: String!
  kWh: BigDecimal!
  co2eq: BigDecimal!
  timestamp: BigInt!
  org: String!
  nftId: String!
  zkProofHash: Bytes!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type OffsetRetired @entity {
  id: ID!
  paymentId: String!
  payer: Bytes!
  amount: BigDecimal!
  carbonCredits: BigDecimal!
  jobId: String!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type Organization @entity {
  id: ID!
  name: String!
  totalEnergyConsumed: BigDecimal!
  totalCarbonEmissions: BigDecimal!
  totalOffsetsRetired: BigDecimal!
  energyRecords: [EnergyIssued!]! @derivedFrom(field: "org")
  offsetPayments: [OffsetRetired!]! @derivedFrom(field: "payer")
  createdAt: BigInt!
  updatedAt: BigInt!
}

type DailyStats @entity {
  id: ID! # Format: YYYY-MM-DD
  date: String!
  totalEnergyKWh: BigDecimal!
  totalCO2eq: BigDecimal!
  totalOffsetsRetired: BigDecimal!
  uniqueOrganizations: Int!
  energyRecordsCount: Int!
  offsetPaymentsCount: Int!
}
